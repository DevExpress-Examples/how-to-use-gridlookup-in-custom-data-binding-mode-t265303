@Html.DevExpress().GridLookup(settings =>
{
    settings.Name = "GridLookup";
    settings.GridViewProperties.CallbackRouteValues = new { Controller = "IncrementalFiltering", Action = "GridLookupIncrementalFilteringPartial" };
    settings.GridViewProperties.CustomBindingRouteValuesCollection.Add(
           GridViewOperationType.Paging,
           new { Controller = "IncrementalFiltering", Action = "GridLookupPagingAction" }
       );
    settings.GridViewProperties.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Sorting,
        new { Controller = "IncrementalFiltering", Action = "GridLookupSortingAction" }
    );
    settings.GridViewProperties.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Filtering,
        new { Controller = "IncrementalFiltering", Action = "GridLookupFilteringAction" }
    );
    settings.GridViewProperties.Settings.ShowFilterRow = true;
    settings.KeyFieldName = "OrderID";
    settings.Columns.Add("OrderID");
    settings.Columns.Add("ShipName");
    settings.Columns.Add("ShipCity");
    settings.Columns.Add(c => {
        c.FieldName = "OrderDate";
        c.ColumnType = MVCxGridViewColumnType.DateEdit;
    });
    settings.Properties.SelectionMode = GridLookupSelectionMode.Single;
    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
    settings.Properties.TextFormatString = "{0} {1} {2}";
    settings.Width = 250;
    settings.DataBound = (sender, e) =>
    {
        var gridLookup = (MVCxGridLookup)sender;
        gridLookup.GridView.Width = 250;
    };
    settings.GridViewProperties.SettingsPager.PageSize = 10;
}).BindToCustomData(Model).GetHtml()